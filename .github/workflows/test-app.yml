name: Test Nitsche solver

on:
  # Trigger tests on push
  push:
    branches:
      - "**"
  schedule:
    # '*' is a special character in YAML, so string must be quoted
    - cron: "0 1 * * *"
jobs:
  build:
    if: "!(contains(github.event.head_commit.message, '[ci skip]') || contains(github.event.head_commit.message, '[skip ci]'))"
    runs-on: ubuntu-20.04
    container: dolfinx/dev-env
    env:
      HDF5_MPI: "ON"
      CC: mpicc
      HDF5_DIR: "/usr/lib/x86_64-linux-gnu/hdf5/mpich/"
      CXX: clang++-12
      PETSC_ARCH: linux-gnu-real-32
      OMPI_ALLOW_RUN_AS_ROOT: 1
      OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
      OMPI_MCA_rmaps_base_oversubscribe: 1
      OMPI_MCA_plm: isolated
      OMPI_MCA_btl_vader_single_copy_mechanism: none
      OMPI_MCA_mpi_yield_when_idle: 1
      OMPI_MCA_hwloc_base_binding_policy: none
    steps:
      - uses: actions/checkout@v2

      - name: Install meshio/h5py
        run: |
          pip3 install --no-cache-dir --no-binary=h5py h5py meshio

      - name: Get Basix and install
        uses: actions/checkout@v2
        with:
          path: ./basix
          repository: FEniCS/basix
          ref: main

      - name: Install FEniCS Python components (dolfinx)
        run: |
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -B build-basix -S ./basix/cpp
          cmake --build build-basix
          cmake --install build-basix
          python3 -m pip install ./basix/python
          python3 -m pip install git+https://github.com/FEniCS/ufl.git
          python3 -m pip install git+https://github.com/FEniCS/ffcx.git
      - name: Install dolfinx
        uses: actions/checkout@v2
        with:
          path: ./dolfinx
          repository: FEniCS/dolfinx
          ref: main

      - name: Configure C++ (dolfinx)
        run: cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer -B build-dolfinx -S ./dolfinx/cpp/

      - name: Build and install C++ library (dolfinx)
        run: |
          cmake --build build-dolfinx
          cmake --install build-dolfinx

      - name: Build Python interface (dolfinx)
        run: python3 -m pip -v install ./dolfinx/python/

      - name: Get Custom assemblers
        uses: actions/checkout@v2
        with:
          path: ./asimov-custom-assemblers
          repository: Wells-Group/asimov-custom-assemblers
          ref:  dokken/rewrite_quadraturerule

      - name: Install custom assemblers (C++)
        run: |
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer -B build-cuas -S ./asimov-custom-assemblers/cpp
          ninja -C build-cuas install

      - name: Install custom assemblers
        run: python3 -m pip -v install ./asimov-custom-assemblers/python/

      - name: Install contact (C++)
        run: |
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer -B build-contact -S cpp/
          ninja -C build-contact install

      - name: Install contact 
        run: python3 -m pip -v install python/

      - name: Flake8 code
        run: flake8 python/

      - name: Run demos
        run: |
          cd python/demos
          mkdir -p results
          python3 compare_nitsche_snes.py

      - name: Run tests
        run: |
          cd python/tests
          python3 create_test_meshes.py
          python3 -m pytest . -vs
