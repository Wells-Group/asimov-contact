name: Test Nitsche solver

on:
  # Trigger tests on push
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main
  schedule:
    # '*' is a special character in YAML, so string must be quoted
    - cron: "0 1 * * *"
jobs:
  build:
    runs-on: ubuntu-latest
    container: ghcr.io/fenics/test-env:current-mpich

    strategy:
      matrix:
        # Complex mode not working
        run_mode: ["Release", "Debug"]
        petsc_mode: ["real"]
        petsc_precision: ["64"]
        petsc_int: ["32"]
        CXX: [g++]
        CC: [cc]
        # exclude:
        #   - CC: cc
        #     CXX: clang++
        #   - CC: clang
        #     CXX: c++
    env:
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
      PETSC_ARCH: linux-gnu-${{ matrix.petsc_mode }}${{ matrix.petsc_precision}}-${{ matrix.petsc_int }}
      OMPI_ALLOW_RUN_AS_ROOT: 1
      OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
      OMPI_MCA_rmaps_base_oversubscribe: 1
      OMPI_MCA_plm: isolated
      OMPI_MCA_btl_vader_single_copy_mechanism: none
      OMPI_MCA_mpi_yield_when_idle: 1
      OMPI_MCA_hwloc_base_binding_policy: none
      CONTACT_CMAKE_CXX_FLAGS: "-Wall -Werror -g -pedantic -Ofast -march=native"
    steps:
      - uses: actions/checkout@v4

      # - name: Install clang
      #   if: ${{ matrix.CC }} == "clang"
      #   run: |
      #     apt-get update
      #     apt-get install -y clang

      - name: Install DOLFINx
        uses: jorgensd/actions/install-dolfinx@v0.3.0
        with:
          petsc_arch: ${{ env.PETSC_ARCH }}
          dolfinx: main
          ffcx: main
          ufl: main
          basix: main

      - name: Install contact (C++)
        id: cpp-contact
        run: |
          cmake -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.run_mode }} -DCMAKE_CXX_FLAGS="${CONTACT_CMAKE_CXX_FLAGS}" -B build-contact -S cpp/
          ninja -C build-contact install
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="${CONTACT_CMAKE_CXX_FLAGS}" -B build-contact -S cpp/
          ninja -C build-contact install
          python3 -m pip -v install -r ./python/build-requirements.txt
          python3 -m pip -v install --config-settings=build-dir="build-debug-contact" --config-settings=cmake.build-type="Debug"  --config-settings=install.strip=false --no-build-isolation -e ./python/ 

      - name: Run demos (C++)
        run: |
          cd cpp/demos/meshtie
          cmake -G Ninja -B build-dir
          ninja -C build-dir
          ./build-dir/demo_meshtie
          mpirun -np 2 ./build-dir/demo_meshtie
          cd ../meshtieNewton
          cmake -G Ninja -B build-dir
          ninja -C build-dir
          ./build-dir/demo_meshtie
          mpirun -np 2 ./build-dir/demo_meshtie
          cd ../meshtieHeatTransfer
          cmake -G Ninja -B build-dir
          ninja -C build-dir
          ./build-dir/demo_meshtie
          mpirun -np 2 ./build-dir/demo_meshtie
          cd ../meshtieHeatEquation
          cmake -G Ninja -B build-dir
          ninja -C build-dir
          ./build-dir/demo_meshtie
          mpirun -np 2 ./build-dir/demo_meshtie

      - name: Install contact
        id: python-contact
        run: |
          python3 -m pip -v install -r ./python/build-requirements.txt
          python3 -m pip -v install --config-settings=build-dir="build-${{ matrix.run_mode }}" --config-settings=install.strip=false  --config-settings=cmake.build-type="${{ matrix.run_mode }}" --no-build-isolation -e ./python/ 

      - name: Flake8 code
        if: always()
        run: flake8 python/

      - name: Run mypy checks
        run: |
          pip3 install mypy
          cd python
          python3 -m mypy . --exclude=build

      - name: Create output folders
        id: output-creation
        working-directory: ./python/demos
        run: |
            mkdir -p results
            mkdir -p meshes

      - name: Run SNES demos
        working-directory: ./python/demos
        run: |
          python3 compare_custom_snes_one_sided.py
          python3 compare_nitsche_snes.py

      - name: Run rigid surface demos
        working-directory: ./python/demos
        run: |  
          python3 demo_nitsche_rigid_surface_ufl.py
          python3 demo_nitsche_rigid_surface_custom.py
          python3 nitsche_euler_bernoulli.py

      - name: Run unbiased demos
        working-directory: ./python/demos
        run: |  
          python3 demo_nitsche_unbiased.py --problem=1
          python3 demo_nitsche_unbiased.py --problem=2 --friction=0.1
          python3 demo_nitsche_unbiased.py --problem=3
          python3 demo_nitsche_unbiased.py --problem=3 --3D --friction=0.1 --coulomb

      - name: Run meshties demos
        working-directory: ./python/demos
        run: |  
          python3 demo_nitsche_meshties.py
          python3 meshtie_convergence.py --3D
          python3 meshtie_convergence.py --simplex --3D
          python3 meshtie_convergence.py
          python3 meshtie_convergence.py --simplex --runs=4
        
      - name: Run Oxford demo
        working-directory: ./python/demos/oxford
        run: 
          python3 blocks_nitsche.py
          cd ../meshtie_demos
          python3 blocks_nitsche_meshtie.py
          python3 poisson_convergence.py --simplex --runs=4
          python3 poisson_convergence.py --3D
          python3 demo_poisson.py

      - name: Run tests
        run: |
          cd python/tests
          mkdir -p meshes
          python3 -m pytest . -vs

      - name: Run unbiased demos in parallel
        working-directory: ./python/demos
        run: |
          mpirun -np 2 python3 demo_nitsche_unbiased.py --problem=1
          mpirun -np 2 python3 demo_nitsche_unbiased.py --problem=2 --friction=0.1
          mpirun -np 2 python3 demo_nitsche_unbiased.py --problem=3
          mpirun -np 2 python3 demo_nitsche_unbiased.py --problem=3 --3D --friction=0.1 --coulomb

      - name: Run meshties demos in parallel
        working-directory: ./python/demos
        run: |  
          mpirun -np 2 python3 demo_nitsche_meshties.py
          mpirun -np 2 python3 meshtie_convergence.py --3D
          mpirun -np 2 python3 meshtie_convergence.py --simplex --3D
          mpirun -np 2 python3 meshtie_convergence.py
          mpirun -np 2 python3 meshtie_convergence.py --simplex --runs=4
